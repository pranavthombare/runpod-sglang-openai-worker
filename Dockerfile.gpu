FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 python3-pip python3-venv python3-dev build-essential git curl ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY requirements.txt ./
RUN python3 -m pip install --no-cache-dir -r requirements.txt

# Install build tooling, CUDA-enabled torch, then sglang (without extras to avoid vLLM source builds)
RUN python3 -m pip install --no-cache-dir --upgrade pip setuptools wheel \
 && python3 -m pip install --no-cache-dir torch --extra-index-url https://download.pytorch.org/whl/cu124 \
 && python3 -m pip install --no-cache-dir sglang

COPY handler.py sglang_client.py start.sh ./
RUN chmod +x start.sh

ENV SGLANG_BASE_URL="" \
    SGLANG_MODEL="" \
    SGLANG_TIMEOUT=300 \
    SGLANG_PORT=30000 \
    # Optional: if set, we start a local SGLang server before the worker
    SGLANG_SERVER_CMD="" \
    MODEL_PATH="/models" \
    SGLANG_EXTRA_ARGS="--trust-remote-code --tp 1" \
    SGLANG_HEALTH_TIMEOUT=180 \
    SGLANG_HEALTH_INTERVAL=1.5

HEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=3 \
    CMD python3 -c "import sglang, pybase64; print('ok')" || exit 1

EXPOSE 30000
CMD ["./start.sh"]
