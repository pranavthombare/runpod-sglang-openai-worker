name: Docker CI to GHCR

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ghcr-build-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: default
            file: Dockerfile
            tag: latest
          - name: gpu
            file: Dockerfile.gpu
            tag: gpu
          - name: qwen480b
            file: Dockerfile.qwen480b
            tag: qwen480b
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (${{ matrix.name }})
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ matrix.tag }}
            ghcr.io/${{ github.repository }}:${{ matrix.tag }}-${{ github.sha }}
          provenance: false
          sbom: false

  # Optional: ping RunPod to trigger an endpoint refresh after images are pushed
  trigger-runpod-refresh:
    if: ${{ success() }}
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      RUNPOD_ENDPOINT_ID: ${{ secrets.RUNPOD_ENDPOINT_ID }}
    steps:
      - name: Skip if no RunPod secrets
        if: ${{ env.RUNPOD_API_KEY == '' || env.RUNPOD_ENDPOINT_ID == '' }}
        run: echo "RUNPOD_API_KEY/ENDPOINT_ID not set; skipping RunPod trigger"

      - name: Trigger RunPod endpoint refresh (best-effort)
        if: ${{ env.RUNPOD_API_KEY != '' && env.RUNPOD_ENDPOINT_ID != '' }}
        run: |
          set -euo pipefail
          echo "Triggering RunPod endpoint refresh for $RUNPOD_ENDPOINT_ID"
          curl -sS -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${RUNPOD_API_KEY}" \
            -d '{"endpointId":"'"${RUNPOD_ENDPOINT_ID}"'"}' \
            https://api.runpod.io/v2/serverless/refresh || true
